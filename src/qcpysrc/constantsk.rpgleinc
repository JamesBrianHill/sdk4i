**FREE
// -------------------------------------------------------------------------------------------------
// Define constants to be used throughout our applications.
//
// @copyright Copyright (c) 2015 - 2025 by James Brian Hill
// @license GNU General Public License version 3
// @link https://www.gnu.org/licenses/gpl-3.0.html
// -------------------------------------------------------------------------------------------------

// -------------------------------------------------------------------------------------------------
//   This program is free software: you can redistribute it and/or modify it under the terms of the
// GNU General Public License as published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
//   This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
// without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.
//
//   You should have received a copy of the GNU General Public License along with this program. If
// not, see https://www.gnu.org/licenses/gpl-3.0.html
// -------------------------------------------------------------------------------------------------

/IF DEFINED(CONSTANTSK)
/EOF
/ENDIF
/DEFINE CONSTANTSK

// -------------------------------------------------------------------------------------------------
// Define global constants, template data structures and template variables.
// -------------------------------------------------------------------------------------------------

// Db2 for i maximums.
// DCL-C C_SDK4I_DB2_COLUMN_MAX_COUNT 8000;
DCL-C C_SDK4I_DB2_COLUMN_NAME_MAX_LEN 128;
// DCL-C C_SDK4I_DB2_SCHEMA_NAME_MAX_LEN 128;
DCL-C C_SDK4I_DB2_TABLE_NAME_MAX_LEN 128;
DCL-C C_SDK4I_DB2_VARCHAR_MAX_LEN 32739;

// Log levels as defined in RFC5424.
DCL-C C_SDK4I_LL_EMG 0; // Emergency: system is unusable.
DCL-C C_SDK4I_LL_ALT 1; // Alert: action must be taken immediately.
DCL-C C_SDK4I_LL_CRT 2; // Critical: critical conditions.
DCL-C C_SDK4I_LL_ERR 3; // Error: error conditions.
DCL-C C_SDK4I_LL_WRN 4; // Warning: warning conditions.
DCL-C C_SDK4I_LL_NOT 5; // Notice: normal but significant condition.
DCL-C C_SDK4I_LL_INF 6; // Informational: informational messages.
DCL-C C_SDK4I_LL_DBG 7; // Debug: debug-level messages.

// Currently, RPG does not understand NULL as defined by Db2 for i - and Db2 for i does not
// understand the NULLIND flag defined in RPG. So when working with embedded SQL in RPG programs
// we have this kludge of defining a 2-byte integer, INT(5), and assigning it the value of
// 0 to indicate NOT NULL.
// We define a constant here to represent NOT NULL when defining variables to be used in embedded
// RPG programs, this makes our code more readable to those not familiar with RPG.
DCL-C C_SDK4I_NOT_NULL 0;
DCL-C C_SDK4I_NULL -1;

// A single quote - helpful when building SQL statements.
// @link https://www.ibm.com/support/pages/node/1119369
DCL-C C_SDK4I_QUOTE ''''; // Do NOT use x'7d'

// RPG maximums.
DCL-C C_SDK4I_RPG_VARCHAR_MAX_LEN 16773100;

// Define some common sizes (binary prefixes - kibi, mebi, gibi, tebi, and pebi).
// You can generate these easily using the bc program on Linux or IBM i:
// echo '2^109' | bc
// The above command will output: 1267650600228229401496703205376 which is the number of bytes in
// one quebibyte.
//
// @link https://en.wikipedia.org/wiki/Binary_prefix
// @link https://www.gnu.org/software/bc/manual/html_mono/bc.html
DCL-C C_SDK4I_SIZE_1KI 1024; // (2^10 - 4 digits) 1 kibibyte
DCL-C C_SDK4I_SIZE_2KI 2048; // (2^11)
DCL-C C_SDK4I_SIZE_4KI 4096; // (2^12)
DCL-C C_SDK4I_SIZE_8KI 8192; // (2^13)
DCL-C C_SDK4I_SIZE_16KI 16384; // (2^14 - 5 digits)
DCL-C C_SDK4I_SIZE_32KI 32768; // (2^15)
DCL-C C_SDK4I_SIZE_64KI 65536; // (2^16)
DCL-C C_SDK4I_SIZE_128KI 131072; // (2^17 6 - digits)
DCL-C C_SDK4I_SIZE_256KI 262144; // (2^18)
DCL-C C_SDK4I_SIZE_512KI 524288; // (2^19)
DCL-C C_SDK4I_SIZE_1MI 1048576; // (2^20 - 7 digits) 1 mebibyte
DCL-C C_SDK4I_SIZE_2MI 2097152; // (2^21)
DCL-C C_SDK4I_SIZE_4MI 4194304; // (2^22)
DCL-C C_SDK4I_SIZE_8MI 8388608; // (2^23)
DCL-C C_SDK4I_SIZE_16MI 16777216; // (2^24 - 8 digits)
// The number of seconds in an average human lifetime is less than 2.9 x 10^7
DCL-C C_SDK4I_SIZE_32MI 33554432; // (2^25)
DCL-C C_SDK4I_SIZE_64MI 67108864; // (2^26)
DCL-C C_SDK4I_SIZE_128MI 134217728; // (2^27 - 9 digits)
DCL-C C_SDK4I_SIZE_256MI 268435456; // (2^28)
DCL-C C_SDK4I_SIZE_512MI 536870912; // (2^29)
DCL-C C_SDK4I_SIZE_1GI 1073741824; // (2^30 - 10 digits) 1 gibibyte
DCL-C C_SDK4I_SIZE_2GI 2147483648; // (2^31)
DCL-C C_SDK4I_SIZE_4GI 4294967296; // (2^32)
DCL-C C_SDK4I_SIZE_8GI 8589934592; // (2^33)
DCL-C C_SDK4I_SIZE_16GI 17179869184; // (2^34 - 11 digits)
DCL-C C_SDK4I_SIZE_32GI 34359738368; // (2^35)
DCL-C C_SDK4I_SIZE_64GI 68719476736; // (2^36)
DCL-C C_SDK4I_SIZE_128GI 137438953472; // (2^37 - 12 digits)
DCL-C C_SDK4I_SIZE_256GI 274877906944; // (2^38)
DCL-C C_SDK4I_SIZE_512GI 549755813888; // (2^39)
DCL-C C_SDK4I_SIZE_1TI 1099511627776; // (2^40 - 13 digits) 1 tebibyte
DCL-C C_SDK4I_SIZE_2TI 2199023255552; // (2^41)
DCL-C C_SDK4I_SIZE_4TI 4398046511104; // (2^42)
DCL-C C_SDK4I_SIZE_8TI 8796093022208; // (2^43)
DCL-C C_SDK4I_SIZE_16TI 17592186044416; // (2^44 - 14 digits)
DCL-C C_SDK4I_SIZE_32TI 35184372088832; // (2^45)
DCL-C C_SDK4I_SIZE_64TI 70368744177664; // (2^46)
DCL-C C_SDK4I_SIZE_128TI 140737488355328; // (2^47 - 15 digits)
DCL-C C_SDK4I_SIZE_256TI 281474976710656; // (2^48)
DCL-C C_SDK4I_SIZE_512TI 562949953421312; // (2^49)
DCL-C C_SDK4I_SIZE_1PI 1125899906842624; // (2^50 - 16 digits) 1 pebibyte
DCL-C C_SDK4I_SIZE_2PI 2251799813685248; // (2^51)
DCL-C C_SDK4I_SIZE_4PI 4503599627370496; // (2^52)
DCL-C C_SDK4I_SIZE_8PI 9007199254740992; // (2^53)
DCL-C C_SDK4I_SIZE_16PI 18014398509481984; // (2^54 - 17 digits)
DCL-C C_SDK4I_SIZE_32PI 36028797018963968; // (2^55)
DCL-C C_SDK4I_SIZE_64PI 72057594037927936; // (2^56)
DCL-C C_SDK4I_SIZE_128PI 144115188075855872; // (2^57 - 18 digits)
DCL-C C_SDK4I_SIZE_256PI 288230376151711744; // (2^58)
DCL-C C_SDK4I_SIZE_512PI 576460752303423488; // (2^59)
DCL-C C_SDK4I_SIZE_1EI 1152921504606846976; // (2^60 - 19 digits) 1 exbibyte
DCL-C C_SDK4I_SIZE_2EI 2305843009213693952; // (2^61)
DCL-C C_SDK4I_SIZE_4EI 4611686018427387904; // (2^62)
DCL-C C_SDK4I_SIZE_8EI 9223372036854775808; // (2^63)
DCL-C C_SDK4I_SIZE_16EI 18446744073709551616; // (2^64 - 20 digits)
DCL-C C_SDK4I_SIZE_32EI 36893488147419103232; // (2^65)
DCL-C C_SDK4I_SIZE_64EI 73786976294838206464; // (2^66)
DCL-C C_SDK4I_SIZE_128EI 147573952589676412928; // (2^67 - 21 digits)
// There are approximately 6 x 10^21 grains of sand on earth.
DCL-C C_SDK4I_SIZE_256EI 295147905179352825856; // (2^68)
DCL-C C_SDK4I_SIZE_512EI 590295810358705651712; // (2^69)
DCL-C C_SDK4I_SIZE_1ZI 1180591620717411303424; // (2^70 - 22 digits) 1 zebibyte
DCL-C C_SDK4I_SIZE_2ZI 2361183241434822606848; // (2^71)
DCL-C C_SDK4I_SIZE_4ZI 4722366482869645213696; // (2^72)
DCL-C C_SDK4I_SIZE_8ZI 9444732965739290427392; // (2^73)
DCL-C C_SDK4I_SIZE_16ZI 18889465931478580854784; // (2^74 - 23 digits)
DCL-C C_SDK4I_SIZE_32ZI 37778931862957161709568; // (2^75)
DCL-C C_SDK4I_SIZE_64ZI 75557863725914323419136; // (2^76)
DCL-C C_SDK4I_SIZE_128ZI 151115727451828646838272; // (2^77 - 24 digits)
DCL-C C_SDK4I_SIZE_256ZI 302231454903657293676544; // (2^78)
DCL-C C_SDK4I_SIZE_512ZI 604462909807314587353088; // (2^79)
DCL-C C_SDK4I_SIZE_1YI 1208925819614629174706176; // (2^80 - 25 digits) 1 yobibyte
DCL-C C_SDK4I_SIZE_2YI 2417851639229258349412352; // (2^81)
DCL-C C_SDK4I_SIZE_4YI 4835703278458516698824704; // (2^82)
DCL-C C_SDK4I_SIZE_8YI 9671406556917033397649408; // (2^83)
DCL-C C_SDK4I_SIZE_16YI 19342813113834066795298816; // (2^84 - 26 digits)
DCL-C C_SDK4I_SIZE_32YI 38685626227668133590597632; // (2^85)
DCL-C C_SDK4I_SIZE_64YI 77371252455336267181195264; // (2^86)
DCL-C C_SDK4I_SIZE_128YI 154742504910672534362390528; // (2^87 - 27 digits)
// There are about 7 x 10^27 atoms in a human body.
DCL-C C_SDK4I_SIZE_256YI 309485009821345068724781056; // (2^88)
DCL-C C_SDK4I_SIZE_512YI 618970019642690137449562112; // (2^89)
DCL-C C_SDK4I_SIZE_1RI 1237940039285380274899124224; // (2^90 - 28 digits) 1 robibyte
DCL-C C_SDK4I_SIZE_2RI 2475880078570760549798248448; // (2^91)
DCL-C C_SDK4I_SIZE_4RI 4951760157141521099596496896; // (2^92)
DCL-C C_SDK4I_SIZE_8RI 9903520314283042199192993792; // (2^93)
DCL-C C_SDK4I_SIZE_16RI 19807040628566084398385987584; // (2^94 - 29 digits)
DCL-C C_SDK4I_SIZE_32RI 39614081257132168796771975168; // (2^95)
DCL-C C_SDK4I_SIZE_64RI 79228162514264337593543950336; // (2^96)
DCL-C C_SDK4I_SIZE_128RI 158456325028528675187087900672; // (2^97 - 30 digits)
DCL-C C_SDK4I_SIZE_256RI 316912650057057350374175801344; // (2^98)
DCL-C C_SDK4I_SIZE_512RI 633825300114114700748351602688; // (2^99)
DCL-C C_SDK4I_SIZE_1QI 1267650600228229401496703205376; // (2^100 - 31 digits) 1 quebibyte
DCL-C C_SDK4I_SIZE_2QI 2535301200456458802993406410752; // (2^101)
DCL-C C_SDK4I_SIZE_4QI 5070602400912917605986812821504; // (2^102)
DCL-C C_SDK4I_SIZE_8QI 10141204801825835211973625643008; // (2^103 - 32 digits)
DCL-C C_SDK4I_SIZE_16QI 20282409603651670423947251286016; // (2^104)
DCL-C C_SDK4I_SIZE_32QI 40564819207303340847894502572032; // (2^105)
DCL-C C_SDK4I_SIZE_64QI 81129638414606681695789005144064; // (2^106)
DCL-C C_SDK4I_SIZE_128QI 162259276829213363391578010288128; // (2^107 - 33 digits)
DCL-C C_SDK4I_SIZE_256QI 324518553658426726783156020576256; // (2^108)
DCL-C C_SDK4I_SIZE_512QI 649037107316853453566312041152512; // (2^109)
// A Foe is a unit of energy equal to 10^44 joules - the amount of energy released by a supernova.
// A conservative lower bound for the number of possible chess games is 10^120 (the Shannon Number).

// Common SQLSTATE values
// @link https://www.ibm.com/docs/en/i/7.5?topic=codes-listing-sqlstate-values
DCL-C C_SDK4I_SQLSTATE_OK '00000'; // Unqualified success
DCL-C C_SDK4I_SQLSTATE_TRUNCATION_STRING_DATA '01004';
DCL-C C_SDK4I_SQLSTATE_NOT_FOUND '02000';

// SQLSTATE classes
// @link https://www.ibm.com/docs/en/i/7.5?topic=codes-listing-sqlstate-class
DCL-C C_SDK4I_SQLSTATE_WARNING '01';
DCL-C C_SDK4I_SQLSTATE_NO_DATA '02';
DCL-C C_SDK4I_SQLSTATE_DYNAMIC_SQL_ERROR '07';
DCL-C C_SDK4I_SQLSTATE_CONNECTION_EXCEPTION '08';
DCL-C C_SDK4I_SQLSTATE_TRIGGERED_ACTION_EXCEPTION '09';
DCL-C C_SDK4I_SQLSTATE_FEATURE_NOT_SUPPORTED '0A';
DCL-C C_SDK4I_SQLSTATE_INVALID_SCHEMA_NAME_LIST_SPEC '0E';
DCL-C C_SDK4I_SQLSTATE_INVALID_TOKEN '0F';
DCL-C C_SDK4I_SQLSTATE_RESIGNAL_WHEN_HANDLER_NOT_ACTIVE '0K';
DCL-C C_SDK4I_SQLSTATE_SQL_XML_MAPPING_ERROR '0N';
DCL-C C_SDK4I_SQLSTATE_PROHIBITED_STATEMENT_DURING_TRIGGER '0W';
DCL-C C_SDK4I_SQLSTATE_DIAGNOSTICS_EXCEPTION '0Z';
DCL-C C_SDK4I_SQLSTATE_XQUERY_ERROR '10';
DCL-C C_SDK4I_SQLSTATE_CASE_NOT_FOUND_FOR_CASE_STATMENT '20';
DCL-C C_SDK4I_SQLSTATE_CARDINALITY_VIOLATION '21';
DCL-C C_SDK4I_SQLSTATE_DATA_EXCEPTION '22';
DCL-C C_SDK4I_SQLSTATE_CONSTRAINT_VIOLATION '23';
DCL-C C_SDK4I_SQLSTATE_INVALID_CURSOR_STATE '24';
DCL-C C_SDK4I_SQLSTATE_INVALID_TRANSACTION_STATE '25';
DCL-C C_SDK4I_SQLSTATE_INVALID_SQL_STATEMENT_IDENTIFIER '26';
DCL-C C_SDK4I_SQLSTATE_TRIGGERED_DATA_CHANGE_VIOLATION '27';
DCL-C C_SDK4I_SQLSTATE_INVALID_AUTHORIZATION_SPECIFICATION '28';
DCL-C C_SDK4I_SQLSTATE_INVALID_TRANSACTION_TERMINATION '2D';
DCL-C C_SDK4I_SQLSTATE_INVALID_CONNECTION_NAME '2E';
DCL-C C_SDK4I_SQLSTATE_SQL_FUNCTION_EXCEPTION '2F';
DCL-C C_SDK4I_SQLSTATE_INVALID_SQL_DESCRIPTOR_NAME '33';
DCL-C C_SDK4I_SQLSTATE_INVALID_CURSOR_NAME '34';
DCL-C C_SDK4I_SQLSTATE_INVALID_CONDITION_NUMBER '35';
DCL-C C_SDK4I_SQLSTATE_CURSOR_SENSITIVITY_EXCEPTION '36';
DCL-C C_SDK4I_SQLSTATE_EXTERNAL_FUNCTION_EXCEPTION '38';
DCL-C C_SDK4I_SQLSTATE_EXTERNAL_FUNCTION_CALL_EXCEPTION '39';
DCL-C C_SDK4I_SQLSTATE_SAVEPOINT_EXCEPTION '3B';
DCL-C C_SDK4I_SQLSTATE_AMBIGUOUS_CURSOR_NAME '3C';
DCL-C C_SDK4I_SQLSTATE_INVALID_SCHEMA_NAME '3F';
DCL-C C_SDK4I_SQLSTATE_SYNTAX_ERROR_OR_ACCESS_RULE_VIOLATION '42';
DCL-C C_SDK4I_SQLSTATE_WITH_CHECK_OPTION_VIOLATION '44';
DCL-C C_SDK4I_SQLSTATE_JAVA_ERRORS '46';
DCL-C C_SDK4I_SQLSTATE_INVALID_APPLICATION_STATE '51';
DCL-C C_SDK4I_SQLSTATE_INVALID_OPERAND_OR_INCONSISTENT_SPEC '53';
DCL-C C_SDK4I_SQLSTATE_SQL_OR_PRODUCT_LIMIT_EXCEEDED '54';
DCL-C C_SDK4I_SQLSTATE_OBJECT_NOT_IN_PREREQUISITE_STATE '55';
DCL-C C_SDK4I_SQLSTATE_MISCELLANEOUS_SQL_OR_PRODUCT_ERROR '56';
DCL-C C_SDK4I_SQLSTATE_RESOURCE_NOT_AVAILABLE_OR_OPERATOR '57';
DCL-C C_SDK4I_SQLSTATE_SYSTEM_ERROR '58';